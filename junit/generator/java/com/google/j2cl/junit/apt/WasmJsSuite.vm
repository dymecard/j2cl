/**
 * Generated test suite from j2wasm_test target
 */
goog.module('${testClass.jsUnitQualifiedName()}');
goog.setTestOnly();
const testSuite = goog.require('goog.testing.testSuite');
const TestCase = goog.require('goog.testing.TestCase');
const j2wasm = goog.require('j2wasm');

let instance;

testSuite({
  async setUpPage() {
    // Set a 30 * 1000 timeout to ensure that the wasm module has enough time to load
    const timeout = 30 * 1000;
    TestCase.getActiveTestCase().promiseTimeout = timeout;

    const absolutePath = "REPLACEMENT_BUILD_PATH_PLACEHOLDER";

    const userImports = {
      'goog.testing.TestCase.saveMessage': msg => TestCase.getActiveTestCase().saveMessage(msg)
    }
    instance = await j2wasm.instantiateStreaming(absolutePath, userImports);

    instance.exports.setUpPageIn${testClass.simpleName()}();
  },

  setUp() {
    instance.exports.setUpIn${testClass.simpleName()}();
  },

  tearDownPage() {
    instance.exports.tearDownPageIn${testClass.simpleName()}();
  },

  tearDown() {
    instance.exports.tearDownIn${testClass.simpleName()}();
  },

#foreach($testMethod in ${testClass.testMethods()})
  ${testMethod.jsTestMethodName()}() {
    instance.exports.${testMethod.jsTestMethodName()}In${testClass.simpleName()}();
  },

#end

}, {order: TestCase.Order.NATURAL});

