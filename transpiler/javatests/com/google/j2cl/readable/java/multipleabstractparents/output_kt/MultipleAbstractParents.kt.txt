package multipleabstractparents

open class MultipleAbstractParents {
 companion object {
  @kotlin.jvm.JvmStatic
  fun main(vararg args: kotlin.String?) {
   assert((multipleabstractparents.MultipleAbstractParents.ArrayList<kotlin.String?>().getFoo(null)!! as java.lang.String).equals("AbstractCollection"))
   assert((multipleabstractparents.MultipleAbstractParents.StringList().getFoo(null)!! as java.lang.String).equals("AbstractCollection"))
   assert(((multipleabstractparents.MultipleAbstractParents.StringList() as multipleabstractparents.MultipleAbstractParents.IStringList?)!!.getFoo(null)!! as java.lang.String).equals("AbstractCollection"))
  }
 }

 fun interface List<T> {
  fun getFoo(t: T?): kotlin.String?
 }

 fun interface Collection<T> {
  fun getFoo(t: T?): kotlin.String?
 }

 abstract class AbstractListCollection<T>: multipleabstractparents.MultipleAbstractParents.List<T>, multipleabstractparents.MultipleAbstractParents.Collection<T> {}

 abstract class AbstractCollection<T> {
  open fun getFoo(t: T?): kotlin.String? {
   return "AbstractCollection"
  }
 }

 abstract class AbstractList<T>: multipleabstractparents.MultipleAbstractParents.List<T>, multipleabstractparents.MultipleAbstractParents.AbstractCollection<T>() {}

 abstract class AbstractList2<T>: multipleabstractparents.MultipleAbstractParents.List<T> {}

 open class ArrayList<T>: multipleabstractparents.MultipleAbstractParents.AbstractList<T>() {}

 fun interface IStringList: multipleabstractparents.MultipleAbstractParents.List<kotlin.String?> {
  override fun getFoo(string: kotlin.String?): kotlin.String?
 }

 abstract class AbstractStringList: multipleabstractparents.MultipleAbstractParents.IStringList, multipleabstractparents.MultipleAbstractParents.AbstractList<kotlin.String?>() {}

 abstract class AbstractStringList2: multipleabstractparents.MultipleAbstractParents.IStringList, multipleabstractparents.MultipleAbstractParents.AbstractList2<kotlin.String?>() {}

 abstract class AbstractStringList3: multipleabstractparents.MultipleAbstractParents.AbstractList2<kotlin.String?>() {}

 open class StringList: multipleabstractparents.MultipleAbstractParents.AbstractStringList() {}

 open class StringListChild: multipleabstractparents.MultipleAbstractParents.StringList() {}
}
