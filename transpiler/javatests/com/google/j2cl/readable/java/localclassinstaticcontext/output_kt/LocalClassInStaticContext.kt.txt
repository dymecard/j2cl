package localclassinstaticcontext

open class LocalClassInStaticContext {
 companion object {
  @kotlin.jvm.JvmField var f: kotlin.Any? = (object : java.lang.Object() {} as kotlin.Any)

  @kotlin.jvm.JvmStatic
  fun test() {
   open class `$1A` {}
   `$1A`()
   val a: kotlin.Any? = (object : java.lang.Object() {
    internal open fun m() {
     `$1A`()
    }
   } as kotlin.Any)
  }

  init {
   open class `$1B` {}
   `$1B`()
   val b: kotlin.Any? = (object : java.lang.Object() {} as kotlin.Any)
  }
 }

 open class C {
  @kotlin.jvm.JvmField var f: Int = 1

  open fun test() {
   open class `$1D` {
    open fun `fun`(): Int {
     return this@C.f
    }
   }
   `$1D`().`fun`()
  }
 }
}
