package jstype

open class SomeJsType<T> {
 @kotlin.jvm.JvmField var publicField: Int = 0

 internal var privateField: Int = 0

 @kotlin.jvm.JvmField internal var packageField: Int = 0

 @kotlin.jvm.JvmField protected var protectedField: Int = 0

 open fun publicMethod() {}

 internal fun privateMethod() {}

 internal open fun packageMethod() {}

 protected open fun protectedMethod() {}

 open fun useFieldsAndMethods() {
  val value: Int = this.publicField + this.privateField + this.packageField + this.protectedField
  this.publicMethod()
  this.privateMethod()
  this.packageMethod()
  this.protectedMethod()
 }

 open fun testStarAndWildCard(s: jstype.SomeJsType.Star?, w: jstype.SomeJsType.Wildcard?): jstype.SomeJsType.Wildcard? {
  val `object`: kotlin.Any? = (java.lang.Object() as kotlin.Any)
  val star: jstype.SomeJsType.Star? = java.lang.Double.valueOf(3.0) as jstype.SomeJsType.Star?
  return star as jstype.SomeJsType.Wildcard?
 }

 interface Star {}

 interface Wildcard {}
}
