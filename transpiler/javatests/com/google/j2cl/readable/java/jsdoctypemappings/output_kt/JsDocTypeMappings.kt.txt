package jsdoctypemappings

open class JsDocTypeMappings {
 internal open fun returnComparatorWildcard(): java.util.Comparator<*>? {
  return null
 }

 internal open fun returnComparable(): kotlin.Comparable<*>? {
  return null
 }

 internal open fun returnJavaLangString(): kotlin.String? {
  return null
 }

 internal open fun returnJavaLangObject(): kotlin.Any? {
  return null
 }

 internal open fun returnJavaLangByte(): kotlin.Byte? {
  return null
 }

 internal open fun returnJavaLangShort(): kotlin.Short? {
  return null
 }

 internal open fun returnJavaLangInteger(): kotlin.Int? {
  return null
 }

 internal open fun returnJavaLangLong(): kotlin.Long? {
  return null
 }

 internal open fun returnJavaLangFloat(): kotlin.Float? {
  return null
 }

 internal open fun returnJavaLangDouble(): kotlin.Double? {
  return null
 }

 internal open fun returnJavaLangCharacter(): kotlin.Char? {
  return null
 }

 internal open fun returnJavaLangBoolean(): kotlin.Boolean? {
  return null
 }

 internal open fun returnByte(): Byte {
  return 0
 }

 internal open fun returnShort(): Short {
  return 0
 }

 internal open fun returnInt(): Int {
  return 0
 }

 internal open fun returnLong(): Long {
  return 0L
 }

 internal open fun returnFloat(): Float {
  return 0.0f
 }

 internal open fun returnDouble(): Double {
  return 0.0
 }

 internal open fun returnChar(): Char {
  return '\u0000'
 }

 internal open fun returnBoolean(): Boolean {
  return false
 }

 internal open fun returnVoid() {}

 internal open fun returnNativeFunction(): jsdoctypemappings.JsDocTypeMappings.NativeFunction? {
  return null
 }

 internal open fun returnNativeType(): jsdoctypemappings.JsDocTypeMappings.NativeType? {
  return null
 }

 internal open fun returnExportedType(): jsdoctypemappings.JsDocTypeMappings.ExportedType? {
  return null
 }

 internal open fun <MethodTypeParameter> returnMethodTypeParameter(): MethodTypeParameter? {
  return null
 }

 internal open fun returnNativeNumber(): jsdoctypemappings.JsDocTypeMappings.NativeNumber? {
  return null
 }

 internal open fun returnNativeBoolean(): jsdoctypemappings.JsDocTypeMappings.NativeBoolean? {
  return null
 }

 internal open fun returnNativeString(): jsdoctypemappings.JsDocTypeMappings.NativeString? {
  return null
 }

 internal open fun returnNativeNull(): jsdoctypemappings.JsDocTypeMappings.NativeNull? {
  return null
 }

 internal open fun returnNativeUndefined(): jsdoctypemappings.JsDocTypeMappings.NativeUndefined? {
  return null
 }

 internal open fun returnNativeVoid(): jsdoctypemappings.JsDocTypeMappings.NativeVoid? {
  return null
 }

 internal open fun returnStar(): jsdoctypemappings.JsDocTypeMappings.NativeStar? {
  return null
 }

 internal open fun returnNativeWildcard(): jsdoctypemappings.JsDocTypeMappings.NativeWildcard? {
  return null
 }

 fun interface NativeFunction {
  fun f()
 }

 open class NativeType {}

 open inner class ExportedType {}

 interface NativeNumber {}

 interface NativeBoolean {}

 interface NativeString {}

 interface NativeNull {}

 interface NativeUndefined {}

 interface NativeVoid {}

 interface NativeStar {}

 interface NativeWildcard {}
}
