package enums

enum class Enum1 {
 V1,
 V2;

}

enum class Enum2 {
 VALUE1(2),
 VALUE2(enums.Enum1.V1),
 VALUE3(),
 VALUE4(5) {};

 @kotlin.jvm.JvmField var foo: Int = (enums.Enum1.V1 as java.lang.Enum<enums.Enum1?>).ordinal()

 constructor(foo: Int) {
  this.foo = foo
 }

 constructor(foo: kotlin.Enum<*>?): this((foo!! as java.lang.Enum<*>).ordinal())

 constructor(vararg somePars: kotlin.Any?): this(somePars!!.size)

 companion object {
  @kotlin.jvm.JvmStatic
  fun f(o: kotlin.Any?): enums.Enum2? {
   return null
  }

  @kotlin.jvm.JvmField var C: enums.Enum2? = enums.Enum2.f((java.lang.Object() as kotlin.Any))
 }
}

enum class Enum3 {
 VALUE1(java.util.function.Function<kotlin.Int?, kotlin.Int?> (fun(v: kotlin.Int?): kotlin.Int? {
  return java.lang.Integer.valueOf(1 + (v!! as java.lang.Integer).intValue())
 }));

 constructor(function: java.util.function.Function<kotlin.Int?, kotlin.Int?>?)
}
