package strings

open class Strings {
 @kotlin.jvm.JvmField var someString: kotlin.String? = "This is a string literal"

 @kotlin.jvm.JvmField var nonBmpChar: kotlin.String? = "\uD800\uDF46"

 @kotlin.jvm.JvmField var wideColon: kotlin.String? = "\uFF1A"

 open fun test() {
  var s1: kotlin.String? = null
  var s2: kotlin.String? = null
  var s3: kotlin.String? = "" + s1 + s2
  s2 = "" + s2 + s2
  s1 = "" + s1 + "a"
  s3 = "" + s1 + s1 + s2 + null + "a"
  s3 = "a" + s1 + s1 + s2 + null
  var s4: kotlin.String?
  val c1: Char = 'F'
  val c2: Char = 'o'
  s4 = "" + (c1.code + c2.code) + "o"
  s4 = "" + s4 + ("" + 1L + "")
  s4 = "" + s4 + 1L
  s4 = "" + s4 + 'C'
  s4 = "" + s4 + 1
  s4 = "" + s4 + 1.0
  s4 = "" + s4 + 1.0f
  s4 = "" + s4 + 1.toShort()
  run {
   val `$qualifier`: strings.Strings.StringHolder = strings.Strings.StringHolder()
   run {
    val `$qualifier_1`: strings.Strings.StringHolder = `$qualifier`
    val `$value`: kotlin.String? = "" + `$qualifier`.s + s4
    `$qualifier_1`.s = `$value`
    `$value`
   }
  }
  run {
   val `$qualifier_2`: strings.Strings.StringHolder = strings.Strings.StringHolder()
   run {
    val `$qualifier_3`: strings.Strings.StringHolder = `$qualifier_2`
    val `$value_1`: kotlin.String? = "" + `$qualifier_2`.s + c1
    `$qualifier_3`.s = `$value_1`
    `$value_1`
   }
  }
  run {
   val `$qualifier_4`: strings.Strings.StringHolder = strings.Strings.StringHolder()
   run {
    val `$qualifier_5`: strings.Strings.StringHolder = `$qualifier_4`
    val `$value_2`: kotlin.String? = "" + `$qualifier_4`.s + "o"
    `$qualifier_5`.s = `$value_2`
    `$value_2`
   }
  }
  s1 = "" + (1 + 2) + "s"
  s1 = "s" + 1 + 2
 }

 companion object {
  @kotlin.jvm.JvmField val ESCAPE_CODES: kotlin.String? = "\b\u000C\n\r\t\"\'\\\u0000\u007F\uD800\uDF46\uFF1A"

  @kotlin.jvm.JvmField val ESCAPE_CODES_COPY: kotlin.String? = "\b\u000C\n\r\t\"\'\\\u0000\u007F\uD800\uDF46\uFF1A"
 }

 open class StringHolder {
  @kotlin.jvm.JvmField var s: kotlin.String? = "A"
 }
}
