package importglobaljstypes

open class Number {
 open fun testJsDocForLiteralType(a: importglobaljstypes.Number.MyLiteralType?): importglobaljstypes.Number.MyLiteralType? {
  return a
 }

 companion object {
  @kotlin.jvm.JvmStatic
  external fun `fun`(x: Double): Boolean

  @kotlin.jvm.JvmStatic
  fun test(x: Double): Boolean {
   return importglobaljstypes.Number.`fun`(x)
  }

  @kotlin.jvm.JvmStatic
  external fun getFromCharCodeFunction(): importglobaljstypes.Number.NativeFunction<kotlin.String?>?

  @kotlin.jvm.JvmStatic
  fun fromCharCode(array: IntArray?): kotlin.String? {
   return importglobaljstypes.Number.getFromCharCodeFunction()!!.apply(null, array)
  }
 }

 fun interface NativeFunction<T> {
  external fun apply(thisContext: kotlin.Any?, argsArray: IntArray?): T?
 }

 interface MyLiteralType {}
}
