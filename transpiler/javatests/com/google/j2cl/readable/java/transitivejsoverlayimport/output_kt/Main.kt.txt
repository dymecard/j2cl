package transitivejsoverlayimport

open class Immediate: transitivejsoverlayimport.Transitive() {
 fun doImmediateInstanceMethod() {}
}

open class NonNativeUpper: transitivejsoverlayimport.Immediate {
 constructor()

 open fun doNonNativeUpperInstanceMethod() {}
}

open class NonNativeLower: transitivejsoverlayimport.NonNativeUpper {
 constructor()

 open fun doNonNativeLowerInstanceMethod() {}
}

open class Transitive {
 external fun getJsProperty(): Int

 fun doTransitiveInstanceMethod(arg1: kotlin.String?) {}
}

open class Main {
 companion object {
  @kotlin.jvm.JvmStatic
  fun main(vararg args: kotlin.String?) {
   if (true) {
    val transitive: transitivejsoverlayimport.Transitive? = null
    transitive!!.doTransitiveInstanceMethod("arg1")
    transitive!!.getJsProperty()
   }
   if (true) {
    val immediate: transitivejsoverlayimport.Immediate? = null
    immediate!!.doTransitiveInstanceMethod("arg1")
    immediate!!.getJsProperty()
    immediate!!.doImmediateInstanceMethod()
   }
   if (true) {
    val nonNativeUpper: transitivejsoverlayimport.NonNativeUpper? = null
    nonNativeUpper!!.doTransitiveInstanceMethod("arg1")
    nonNativeUpper!!.getJsProperty()
    nonNativeUpper!!.doImmediateInstanceMethod()
    nonNativeUpper!!.doNonNativeUpperInstanceMethod()
   }
   if (true) {
    val nonNativeLower: transitivejsoverlayimport.NonNativeLower? = null
    nonNativeLower!!.doTransitiveInstanceMethod("arg1")
    nonNativeLower!!.getJsProperty()
    nonNativeLower!!.doImmediateInstanceMethod()
    nonNativeLower!!.doNonNativeUpperInstanceMethod()
    nonNativeLower!!.doNonNativeLowerInstanceMethod()
   }
  }
 }
}
