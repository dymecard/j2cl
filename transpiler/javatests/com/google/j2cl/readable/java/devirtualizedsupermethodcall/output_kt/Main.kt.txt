package devirtualizedsupermethodcall

open class SubNumber: kotlin.Number() {
 open override fun toInt(): Int {
  return 0
 }

 open override fun toLong(): Long {
  return 0L
 }

 open override fun toFloat(): Float {
  return 0.0f
 }

 open override fun toDouble(): Double {
  return 0.0
 }
}

open class FooCallsSuperObjectMethod {
 open override fun hashCode(): Int {
  return (super as java.lang.Object).hashCode()
 }
}

open class Main {
 open fun main() {
  val fooCallsSuperObjectMethods: devirtualizedsupermethodcall.FooCallsSuperObjectMethod? = devirtualizedsupermethodcall.FooCallsSuperObjectMethod()
  fooCallsSuperObjectMethods!!.hashCode()
  val sn: devirtualizedsupermethodcall.SubNumber? = devirtualizedsupermethodcall.SubNumber()
  (sn!! as java.lang.Number).byteValue()
  sn!!.toDouble()
  sn!!.toFloat()
  sn!!.toInt()
  (sn!! as java.lang.Number).shortValue()
 }
}
