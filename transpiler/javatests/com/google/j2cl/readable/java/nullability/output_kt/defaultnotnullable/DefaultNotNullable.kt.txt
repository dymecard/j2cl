package nullability.defaultnotnullable

open class DefaultNotNullable {
 @kotlin.jvm.JvmField var f1: kotlin.String = "Hello"

 @kotlin.jvm.JvmField var f2: kotlin.String? = null

 @kotlin.jvm.JvmField var f3: kotlin.String? = null

 @kotlin.jvm.JvmField var f4: kotlin.collections.MutableList<kotlin.String> = java.util.ArrayList<kotlin.String?>()

 @kotlin.jvm.JvmField var f5: kotlin.collections.MutableList<kotlin.String>? = java.util.ArrayList<kotlin.String?>()

 @kotlin.jvm.JvmField var f6: kotlin.collections.MutableList<kotlin.String?> = java.util.ArrayList<kotlin.String?>()

 @kotlin.jvm.JvmField var f7: kotlin.collections.MutableList<kotlin.String?>? = null

 @kotlin.jvm.JvmField var f8: Array<kotlin.String> = arrayOf<kotlin.String?>() as Array<kotlin.String>

 @kotlin.jvm.JvmField var f9: Array<kotlin.String?> = arrayOf<kotlin.String?>()

 @kotlin.jvm.JvmField var f10: Array<kotlin.String>? = arrayOf<kotlin.String?>() as Array<kotlin.String>

 @kotlin.jvm.JvmField var f11: kotlin.Unit? = null

 @kotlin.jvm.JvmField var f12: kotlin.Any = (java.lang.Object() as kotlin.Any)

 @kotlin.jvm.JvmField var f13: kotlin.Any

 @kotlin.jvm.JvmField var f14: kotlin.Any? = null

 constructor() {
  this.f13 = (java.lang.Object() as kotlin.Any)
 }

 open fun m1(a: kotlin.String?, b: kotlin.collections.MutableList<kotlin.Double?>?): kotlin.String {
  return ""
 }

 open fun m2(a: kotlin.String?, b: kotlin.collections.MutableList<kotlin.Double?>?): kotlin.String? {
  return null
 }

 open fun m3(vararg args: kotlin.String?) {}

 fun interface ParameterizedInterface<T> {
  fun add(t: T?)
 }

 open inner class ImplementsParameterizedInterface: nullability.defaultnotnullable.DefaultNotNullable.ParameterizedInterface<kotlin.String> {
  open override fun add(s: kotlin.String?) {}
 }
}
